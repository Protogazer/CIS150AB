TODO LOOK INTO IOSTREAM LISTENER FOR JAVA
maybe the "hold the enter button to stop" ideas would still work
where it polls the keyboard in the updater, and if it's currently being pressed, pause the updater
HOW DO I DEAL WITH HAVING A KEYBOARD LISTENER THAT DOESN'T BLOCK ALL EXECUTION

WHAT SHOULD HAPPEN:
game starts, world ticks, rolls for event, isEvent, pause world update, show screen until keyboard is pressed, continue

maybe I don't need to stop the keyboard process, maybe the event listens for a the same flag as the world update,
then the code for the event runs, before exiting, it resets the world update flag so it doesn't try to return

how do i deal with other shops or user input in that scenario?

it's like a need a constant life feed to you keyboard, then whatever it gets passed is parsed

maybe im doing this all wrong. lets think of alternatives to the current control system...




Ideas: the story of the protomen? maybe not

PHone Dialer - dial a number, if it exists in the array, return it's greeting

Tic tac toe - a littl basic

Jukebox - pick a song

A board game like life or oregon trail?
	- sorry
	- life


=====================================================

how would you randomize the events?
	roll a number (1-100)
		if the number is 1-80, pick from the regular events
		if the number is 81-99 pick from rare events
		if the number is 100, ???

	put each event into an array, run a random number, then execute the method if picked?)
	is each event an object of class event

randomize the change of success (roll a dice and use an if statement [each event can do this])

ways to update stats from event class:
	- return the stats when calling an event, then in main, call the set stats function on your ship
	- NOPE DOESN'T WORK call update it from the event object? (the ship object doesn't exist in the event object)

event class: 
	String eventName = "Meteor Strike"
	String eventBad = "A meteor shower has riddled your ship with holes. You got it patched, but some oxygen leaked out in the meantime."
	String eventGood = " You narrowly dodged an oncoming meteor shower, and were able to collect a few of them in the process.
	String statuEffectBad = "-2 Oxygen\n-1 Shields"
	String statusEffectGood = "+100 Credits"
	int time = 0
	int fuelCells = 0
	int shields = -1
	int rations = 0
	int oxygen = -2
	int credits = 0

	int void runEvent(){
	    rollDice()
	    if (roll > 20) { (**wait, this is troublesome, I don't want to change the values, just return them when called)
		    oxygen = -2**
		    shields = -1**
		INSTEAD, TRY THIS
		    print(eventName + eventGood + statusEffectGood)
	    }
	    else 
	    doThat()
	}

A sci-fi version of the oregon trail (oh wait.. is this just faster than light?)
	- going to each planet in the solar system
	- what do you do if you need more fuel? (send a distress signal, randomizes if the response is good or bad (amount of resources lost if they are scavengers or regular people)
	
	RANDOM EVENTS (double this list)
		- scavengers [-credits][-fuel cells][-rations]
		- meteor strike[-shields][-oxygen (hole in the ship)]
		- distress signal (good)[+credits][-time]
		- distress signal (bad)[-fuel cells] [-credits]
		- UFO sighting (??? teleport you maybe?)
		- solar wind (speeds along) [+time]
		- solar flare (stops you in tracks) [-time]
		- spark in oxygen storage (-oxygen)
		goofy ones:
			- raging robots (if you beat them)[-shields][+fuel cells (scavenged from parts)]
			- a misbeahving AI (GROBB) [-time][-oxygen (he removed oxygen from the ship in an attempt to kill you]
			- hitchhiker?
			- an unknown lifeform found aboard ship
			- space lottery (some way to make more credits)
			- leaky pipe (lost water [-rations])
			- restaraunt at the end of the universe [+rations][-credits]
			- deliver a package, no questions asked[++credits]
	RESOURCES
		- time (you have to make it before a certain year)
		- fuel cells (outposts)
		- shields (contributes to power draw)
		- rations (bought at outposts)
		- oxygen (gained at outposts? don't need to buy)
		- credits (how do you make credits? Gambling[yeah right!], selling parts, waste time working at outpost)

	EQUIPMENT maybe not? (One upgrade each, keep it simple)
	track power draw (watts PART OF FUEL CELL CALCULATION, not separate)
		- better shield (one upgrade, keep it simple)
		- bigger battery
		- faster engine
